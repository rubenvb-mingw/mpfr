# Note: When -fsanitize=address is used with GCC, LD_PRELOAD needs to be
# unset, otherwise the configure script fails with:
#   checking whether we are cross compiling... configure: error: in ...
#   configure: error: cannot run C compiled programs.
#   If you meant to cross compile, use `--host'.
#   See `config.log' for more details
# because ASan runtime does not come first in initial library list.
# Ideally, in case LD_PRELOAD would be needed, -static-libasan could
# be used to avoid the above error instead of unsetting LD_PRELOAD.
# But -static-libasan does not work with Debian's gcc-snapshot
# (Debian bug 836855), and even with GCC 6, it fails with MPFR
# (Debian bug 836864).
#
# MPFR_DISABLE_IEEE_FLOATS was previously named XDEBUG; both should be
# defined or none of them, in order to get the same kind of tests with
# old and new MPFR versions.
#
# TODO: add -Wint-in-bool-context to recent GCC, once available.

HOST:orge.lip.ens-lyon.fr
PROC:Intel Xeon E5310 [32 bits]
CHECK-BEGIN
CONF:--with-gmp=$HOME/i686/gmp-debug
CONF:--enable-assert=full
CONF:--enable-thread-safe
INFO:CCV:--version
CHECK-END
#CHECK-BEGIN
#CONF:--with-gmp=$HOME/i686/gmp-debug
#CONF:--enable-assert=full
#CONF:CC=icc
#INFO:CCV:--version
#CHECK-END
CHECK-BEGIN
CONF:CFLAGS=-Wall -O2 -ansi -pedantic-errors
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--enable-gmp-internals
CONF:CC=g++
INFO:CCV:--version
CHECK-END
CHECK-BEGIN < 30200
CONF:--with-gmp=$HOME/i686-gmp-4.1.4
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

HOST:ypig.lip.ens-lyon.fr
PROC:Intel Xeon E5520
EVAL:export MPFR_CHECK_LOCALES=1
EVAL:unset CPATH C_INCLUDE_PATH LIBRARY_PATH LD_LIBRARY_PATH LD_RUN_PATH LD_PRELOAD
EVAL:cflags1="-O2 -Wall -Wold-style-declaration -Wold-style-definition -Wmissing-parameter-type -Wmissing-prototypes -Wmissing-declarations -Wmissing-field-initializers -Wno-error=unused-function -Werror"
EVAL:cflags2="$cflags1 -Wcast-function-type -Wcast-align=strict"
# cflags2 can only be used with GCC 8 and later.
CHECK-BEGIN >= 40000
# MPFR 4.0 is needed due to --enable-decimal-float without --with-gmp-build
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-logging
CONF:--enable-decimal-float
CONF:--enable-float128
CONF:CC=gcc-snapshot
CONF:CFLAGS=$cflags2 -DMPFR_COV_CHECK -DMPFR_GROUP_STATIC_SIZE=0
INFO:CCV:--version
CHECK-END
CHECK-BEGIN >= 40000
# Test not needed before MPFR 4.0 (MPFR_GENERIC_ABI is new in MPFR 4.0).
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:CC=gcc-snapshot
CONF:CFLAGS=$cflags2 -DMPFR_GENERIC_ABI
INFO:CCV:--version
CHECK-END
CHECK-BEGIN >= 40000
# MPFR 4.0 is needed for MPFR_PRINTF_MAXLM.
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:CC=gcc-snapshot
CONF:CFLAGS=$cflags2 -std=c90 -pedantic -Wno-error=overlength-strings -DMPFR_TUNE_COVERAGE
INFO:CCV:--version
CHECK-END
CHECK-BEGIN >= 40000
# MPFR 4.0 is needed for MPFR_PRINTF_MAXLM.
# Check if XDEBUG/MPFR_DISABLE_IEEE_FLOATS code is valid in C90.
CONF:CFLAGS=$cflags1 -std=c90 -pedantic -Wno-error=overlength-strings -DXDEBUG -DMPFR_DISABLE_IEEE_FLOATS
INFO:CCV:--version
CHECK-END
CHECK-BEGIN > 30103
# For the decimal separator "," (instead of "."):
ENV:LC_ALL=fr_FR.utf8
# For MPFR 3.1, changeset r9664 is needed.
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:CC=gcc-snapshot
CONF:CFLAGS=$cflags2 -std=c99 -pedantic -Wno-error=overlength-strings
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
ENV:LC_ALL=tr_TR.iso88599
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-shared
CONF:--enable-thread-safe
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:CFLAGS=-Wall -std=c99 -O3 -D_XOPEN_SOURCE=500 -ftrapv -pedantic-errors -Wno-error=overlength-strings
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
# Assertions generate long strings for ISO C90; not a problem in practice.
CONF:CFLAGS=-Wall -Wformat=2 -O2 -ansi -pedantic-errors -Wno-error=overlength-strings
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-thread-safe
CONF:CC=g++
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-gmp-internals
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-gmp-internals
CONF:--enable-thread-safe
CONF:CC=g++
INFO:CCV:--version
CHECK-END
#CHECK-BEGIN
#CONF:--with-gmp=/usr/local/gmp-debug
#CONF:--enable-assert=full
#CONF:--enable-thread-safe
#CONF:CC=llvm-gcc
#INFO:CCV:--version
#CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-thread-safe
CONF:CC=clang-3.4
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:CC=clang-3.4
CONF:CFLAGS=-O2 -fsanitize=undefined -fno-sanitize-recover -DMPFR_COV_CHECK
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:CC=clang-3.4
CONF:CFLAGS=-O2 -fsanitize=undefined -fno-sanitize=float-cast-overflow,float-divide-by-zero -fno-sanitize-recover -DMPFR_POOL_NENTRIES=0
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-thread-safe
CONF:CC=clang-3.5
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:CC=clang-3.5
CONF:CFLAGS=-O2 -fsanitize=undefined -fno-sanitize-recover
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:CC=clang-3.5
CONF:CFLAGS=-O2 -fsanitize=undefined -fno-sanitize=float-cast-overflow,float-divide-by-zero -fno-sanitize-recover -DMPFR_POOL_NENTRIES=0
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-thread-safe
CONF:CC=clang-3.6
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:CC=clang-3.6
CONF:CFLAGS=-O2 -fsanitize=undefined -fno-sanitize-recover
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:CC=clang-3.6
CONF:CFLAGS=-O2 -fsanitize=undefined -fno-sanitize=float-cast-overflow,float-divide-by-zero -fno-sanitize-recover -DMPFR_POOL_NENTRIES=0
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-thread-safe
CONF:CC=clang-3.7
INFO:CCV:--version
CHECK-END
# *** See Debian bug 779785 ***
#CHECK-BEGIN
#CONF:CC=clang-3.7
#CONF:CFLAGS=-Os -fsanitize=undefined -fno-sanitize-recover=undefined
#INFO:CCV:--version
#CHECK-END
#CHECK-BEGIN
#CONF:CC=clang-3.7
#CONF:CFLAGS=-O3 -fsanitize=undefined -fno-sanitize=float-cast-overflow,float-divide-by-zero -fno-sanitize-recover=undefined -DMPFR_POOL_NENTRIES=0
#INFO:CCV:--version
#CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-thread-safe
CONF:CC=clang-3.8
INFO:CCV:--version
CHECK-END
# *** See Debian bug 796211 ***
#CHECK-BEGIN
#CONF:CC=clang-3.8
#CONF:CFLAGS=-Oz -fsanitize=undefined -fno-sanitize-recover=undefined
#INFO:CCV:--version
#CHECK-END
#CHECK-BEGIN
#CONF:CC=clang-3.8
#CONF:CFLAGS=-O3 -fsanitize=undefined -fno-sanitize=float-cast-overflow,float-divide-by-zero -fno-sanitize-recover=undefined -DMPFR_POOL_NENTRIES=0
#INFO:CCV:--version
#CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-logging
CONF:CC=gcc-snapshot
CONF:CFLAGS=-Wall -O3 -march=native -fsanitize=undefined -fno-sanitize-recover
INFO:CCV:--version
CHECK-END
CHECK-BEGIN >= 40000
CONF:CC=gcc-5
CONF:CFLAGS=-Wall -O3 -march=native -fsanitize=address
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp-build=$HOME/software/gmp-5.1.3
CONF:CC=gcc-snapshot
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:CC=gcc-snapshot
# -DMPFR_TEST_DIVBYZERO should be removed in the future.
CONF:CFLAGS=-O2 -std=gnu99 -DMPFR_TESTS_FPE_DIV -DMPFR_TEST_DIVBYZERO -DMPFR_ERRDIVZERO -DXDEBUG -DMPFR_DISABLE_IEEE_FLOATS
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:CC=gcc-snapshot
CONF:CFLAGS=-O2 -std=c99 -D_MPFR_PREC_FORMAT=2 -DMPFR_COV_CHECK
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--prefix=$HOME/notgcc
CONF:--with-gmp=$HOME/wd
CONF:--disable-shared
INFO:notgcc --version | sed -n 's/.*\(Id:.*\) \$/\1/p'
INFO:perl -pi -e 's/^wl=""/wl="-Wl,"/' libtool
CHECK-END
CHECK-BEGIN < 30200
CONF:--with-gmp=$HOME/gmp-4.1.4
CONF:--enable-assert=full
# Do not use the default gcc (now GCC > 5) because the gmp.h from GMP 4.1.4
# is not compatible with it due to the use of "extern __inline__", which
# yields "undefined reference" errors at link time (see also the detection
# done in r9644 and r9645 in the MPFR repository).
CONF:CC=gcc-4.9
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
# gmp-dev: a build from the https://gmplib.org/repo/gmp/ Mercurial repository.
CONF:--with-gmp=$HOME/gmp-dev
CONF:--enable-assert=full
CONF:--enable-logging
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--enable-assert=full
CONF:--enable-thread-safe
CONF:CC=gcc-4.7
CONF:CFLAGS=-m32 -O2 -DMPFR_COV_CHECK -DMPFR_ALLOCA_MAX=0
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-thread-safe
CONF:CC=gcc-5
CONF:CFLAGS=-O3 -march=native -DMPFR_COV_CHECK -DMPFR_ALLOCA_MAX=0
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp-build=$HOME/software/gmp-5.1.3
CONF:--enable-assert=full
CONF:--enable-decimal-float
CONF:CC=gcc-4.7
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
# GMP should be compiled with "--disable-alloca ABI=32" to be able to detect
# a buffer overflow due to incorrect GMP documentation for mpn_set_str.
# See discussion:
#   https://gmplib.org/list-archives/gmp-bugs/2013-December/003267.html
# and the first fix in the GMP documentation:
#   https://gmplib.org/repo/gmp-5.1/raw-rev/d19172622a74
# This bug is present in MPFR versions from 2.1.0 (adding mpfr_strtofr)
# to 3.1.2; it is fixed in r8722 (trunk) and r9243 (3.1 branch).
ENV:GMPDIR=$HOME/software/gmp-6.0.0-32
CONF:--with-gmp-build=$GMPDIR
CONF:--enable-assert=full
CONF:--enable-decimal-float
CONF:--enable-logging
INFO:CCV:--version
INFO:$GMPDIR/config.status -V | sed -n 's/^ *with options/GMP configure options:/p'
CHECK-END
CHECK-BEGIN
ENV:GMPDIR=$HOME/software/gmp-6.0.0-64
CONF:--with-gmp-build=$GMPDIR
CONF:--enable-assert=full
CONF:--enable-decimal-float
CONF:--enable-logging
INFO:CCV:--version
INFO:$GMPDIR/config.status -V | sed -n 's/^ *with options/GMP configure options:/p'
CHECK-END
CHECK-BEGIN
# software/gmp-dev directory: clone of https://gmplib.org/repo/gmp/ (Mercurial).
CONF:--with-gmp-build=$HOME/software/gmp-dev
CONF:--enable-assert=full
CONF:--enable-decimal-float
CONF:CC=gcc-snapshot
INFO:CCV:--version
INFO:hg identify -n $HOME/software/gmp-dev
CHECK-END
CHECK-BEGIN
ENV:C_INCLUDE_PATH=$tmpdir/include
EVAL:mkdir $C_INCLUDE_PATH
EVAL:echo invalid > $C_INCLUDE_PATH/stdint.h
CONF:CFLAGS=-O2 -std=c99 -pedantic-errors
INFO:CCV:--version
INFO:echo "#include <stdint.h>" | gcc -H -E - 2>&1 >/dev/null | head -n 1
CHECK-END
CHECK-BEGIN
#ENV:PATH=$HOME/tcc/bin:$PATH
CONF:--enable-assert=full
#CONF:--disable-shared
CONF:CC=tcc
CONF:LD=tcc
CONF:CFLAGS=-O2
INFO:CCV:-version
CHECK-END
CHECK-BEGIN
ENV:INTEL=$HOME/intel
ENV:INTELC=$INTEL/composer_xe_2015.0.090
ENV:PATH=$INTELC/bin/intel64:$PATH
ENV:LIBRARY_PATH=$INTELC/compiler/lib/intel64:$INTELC/ipp/lib/intel64:$INTELC/mkl/lib/intel64:$INTELC/tbb/lib/intel64/gcc4.4
ENV:LD_LIBRARY_PATH=$INTELC/compiler/lib/intel64:$INTELC/ipp/lib/intel64:$INTELC/mkl/lib/intel64:$INTELC/tbb/lib/intel64/gcc4.4
ENV:CPATH=$INTELC/ipp/include:$INTELC/mkl/include:$INTELC/tbb/include
ENV:INTEL_LICENSE_FILE=$INTEL/licenses
CONF:--enable-assert=full
CONF:CC=icc
INFO:CCV:--version
CHECK-END
CHECK-BEGIN == 30103
# For later MPFR versions, new tests replace this one at the beginning.
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-logging
CONF:CC=gcc-snapshot
CONF:CFLAGS=-O2 -Wall -Wold-style-declaration -Wold-style-definition -Wmissing-parameter-type -Wmissing-prototypes -Wmissing-declarations -Wmissing-field-initializers -Wno-error=unused-function -Werror
INFO:CCV:--version
CHECK-END

HOST:cventin.lip.ens-lyon.fr
PROC:Intel Xeon E5-2609 v3
EVAL:export MPFR_CHECK_LOCALES=1
EVAL:unset CPATH C_INCLUDE_PATH LIBRARY_PATH LD_LIBRARY_PATH LD_RUN_PATH LD_PRELOAD
EVAL:cflags1="-O2 -Wall -Wold-style-declaration -Wold-style-definition -Wmissing-parameter-type -Wmissing-prototypes -Wmissing-declarations -Wmissing-field-initializers -Wno-error=unused-function -Werror"
EVAL:cflags2="$cflags1 -Wcast-function-type -Wcast-align=strict"
# cflags2 can only be used with GCC 8 and later.
CHECK-BEGIN
INFO:CCV:--version
CHECK-END
CHECK-BEGIN >= 40000
# MPFR 4.0 is needed due to --enable-decimal-float without --with-gmp-build
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-logging
CONF:--enable-decimal-float
CONF:--enable-float128
CONF:CC=gcc-snapshot
CONF:CFLAGS=$cflags2 -DMPFR_COV_CHECK -DMPFR_GROUP_STATIC_SIZE=0
INFO:CCV:--version
CHECK-END
CHECK-BEGIN < 40000
# For later MPFR versions, the above test replaces this one.
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-logging
CONF:CC=gcc-snapshot
CONF:CFLAGS=$cflags2
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:CC=gcc-snapshot
CONF:CFLAGS=$cflags2 -DMPFR_GENERIC_ABI
CONF:mpfr_cv_c_long_double_format=unknown
INFO:CCV:--version
CHECK-END
CHECK-BEGIN >= 40000
# MPFR 4.0 is needed for MPFR_PRINTF_MAXLM.
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:CC=gcc-6
CONF:CFLAGS=$cflags1 -std=c90 -pedantic -Wno-error=overlength-strings -DMPFR_TUNE_COVERAGE
INFO:CCV:--version
CHECK-END
CHECK-BEGIN >= 40000
# MPFR 4.0 is needed for MPFR_PRINTF_MAXLM.
# Check if XDEBUG/MPFR_DISABLE_IEEE_FLOATS code is valid in C90.
CONF:CFLAGS=$cflags1 -std=c90 -pedantic -Wno-error=overlength-strings -DXDEBUG -DMPFR_DISABLE_IEEE_FLOATS
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
ENV:LC_ALL=tr_TR.iso88599
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-shared
CONF:--enable-thread-safe
CONF:CC=gcc-4.9
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
# For the decimal separator "," (instead of "."):
ENV:LC_ALL=fr_FR.utf8
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:CFLAGS=-Wall -std=c99 -O3 -D_XOPEN_SOURCE=500 -ftrapv -pedantic-errors -Wno-error=overlength-strings
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:CC=gcc-5
# The -mpc64 option allows us to simulate the FreeBSD / NetBSD 6- behavior
# (problems may appear with mpfr_get_ld and mpfr_set_ld).
# Assertions generate long strings for ISO C90; not a problem in practice.
CONF:CFLAGS=-Wall -Wformat=2 -mpc64 -O2 -ansi -pedantic-errors -Wno-error=overlength-strings
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:CC=g++-4.9
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-gmp-internals
CONF:--enable-thread-safe
CONF:CC=g++
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:CC=clang-3.6
CONF:CFLAGS=-O2 -fsanitize=undefined -fno-sanitize-recover -DMPFR_COV_CHECK
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:CC=clang-3.6
CONF:CFLAGS=-O2 -fsanitize=undefined -fno-sanitize=float-cast-overflow,float-divide-by-zero -fno-sanitize-recover -DMPFR_POOL_NENTRIES=0
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-thread-safe
CONF:CC=clang-3.7
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-thread-safe
CONF:CC=clang-3.8
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:CC=clang-3.9
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:CC=clang-4.0
CONF:CFLAGS=-O2 -D_MPFR_PREC_FORMAT=2
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--enable-assert=full
CONF:--enable-thread-safe
CONF:CC=gcc-5
CONF:CFLAGS=$cflags1 -m32 -DMPFR_COV_CHECK -DMPFR_ALLOCA_MAX=0
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--enable-assert=full
CONF:--enable-thread-safe
CONF:--enable-float128
CONF:CC=gcc-6
CONF:CFLAGS=-m32 -O3 -march=native -fsanitize=undefined -fno-sanitize-recover
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--enable-assert=full
CONF:--enable-thread-safe
CONF:--enable-float128
CONF:CC=gcc-snapshot
CONF:CFLAGS=-m32 -O3 -march=native -fsanitize=address
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-thread-safe
CONF:CC=gcc-4.8
CONF:CFLAGS=-O3 -march=native -DMPFR_COV_CHECK -DMPFR_ALLOCA_MAX=0
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:CC=gcc-6
# -DMPFR_TEST_DIVBYZERO should be removed in the future.
CONF:CFLAGS=-O2 -std=gnu99 -DMPFR_TESTS_FPE_DIV -DMPFR_TEST_DIVBYZERO -DMPFR_ERRDIVZERO -DXDEBUG -DMPFR_DISABLE_IEEE_FLOATS
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:CC=gcc-snapshot
CONF:CFLAGS=-O2 -std=c99 -D_MPFR_PREC_FORMAT=2 -DMPFR_COV_CHECK
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
ENV:MPFR_CHECK_LARGEMEM=1
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-logging
CONF:CC=gcc-snapshot
CONF:CFLAGS=-Wall -O3 -march=native -fsanitize=undefined -fno-sanitize-recover
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
# GMP should be compiled with "--disable-alloca ABI=32" to be able to detect
# a buffer overflow due to incorrect GMP documentation for mpn_set_str.
# See discussion:
#   https://gmplib.org/list-archives/gmp-bugs/2013-December/003267.html
# and the first fix in the GMP documentation:
#   https://gmplib.org/repo/gmp-5.1/raw-rev/d19172622a74
# This bug is present in MPFR versions from 2.1.0 (adding mpfr_strtofr)
# to 3.1.2; it is fixed in r8722 (trunk) and r9243 (3.1 branch).
ENV:GMPDIR=$HOME/software/gmp-6.1.1-32
CONF:--with-gmp-build=$GMPDIR
CONF:--enable-assert=full
CONF:--enable-decimal-float
CONF:--enable-logging
INFO:CCV:--version
INFO:$GMPDIR/config.status -V | sed -n 's/^ *with options/GMP configure options:/p'
CHECK-END
CHECK-BEGIN
ENV:GMPDIR=$HOME/software/gmp-6.1.1-64
CONF:--with-gmp-build=$GMPDIR
CONF:--enable-assert=full
CONF:--enable-decimal-float
CONF:--enable-logging
INFO:CCV:--version
INFO:$GMPDIR/config.status -V | sed -n 's/^ *with options/GMP configure options:/p'
CHECK-END
CHECK-BEGIN
CONF:--prefix=$HOME/notgcc
CONF:--with-gmp=$HOME/wd
CONF:--disable-shared
INFO:notgcc --version | sed -n 's/.*\(Id:.*\) \$/\1/p'
INFO:perl -pi -e 's/^wl=""/wl="-Wl,"/' libtool
CHECK-END
CHECK-BEGIN
ENV:C_INCLUDE_PATH=$tmpdir/include
EVAL:mkdir $C_INCLUDE_PATH
EVAL:echo invalid > $C_INCLUDE_PATH/stdint.h
CONF:CFLAGS=-O2 -std=c99 -pedantic-errors
INFO:CCV:--version
INFO:echo "#include <stdint.h>" | gcc -H -E - 2>&1 >/dev/null | head -n 1
CHECK-END
CHECK-BEGIN
CONF:--enable-assert=full
CONF:CC=tcc
CONF:LD=tcc
CONF:CFLAGS=-O2
INFO:CCV:-version
CHECK-END
CHECK-BEGIN
# GMP has been configured with:
#   --host=i586-mingw32msvc
#   --disable-shared
#   --prefix=/usr/local/gmp-mingw32
#   CC="i586-mingw32msvc-gcc -D__USE_MINGW_ANSI_STDIO"
# Here we want to test a thread-safe build. As we cross-compile
# (use of --host), we need to provide the --enable-thread-safe
# configure option, since TLS support cannot be tested and TLS
# is currently assumed not to be supported by default.
CONF:--host=i586-mingw32msvc
CONF:--disable-shared
CONF:--with-gmp=/usr/local/gmp-mingw32
CONF:--enable-assert=full
CONF:--enable-thread-safe
ENV:LOG_COMPILER=wine
ENV:MPFR_CHECK_LIBC_PRINTF
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
# GMP has been configured with:
#   --host=i586-mingw32msvc
#   --disable-shared
#   --prefix=/usr/local/gmp-mingw32b
# like above, but without the -D__USE_MINGW_ANSI_STDIO option for gcc.
# As we cross-compile (use of --host), we need to explicitly disable
# the printf specifiers that do not work here, as by default, they are
# assumed to be supported.
CONF:--host=i586-mingw32msvc
CONF:--disable-shared
CONF:--with-gmp=/usr/local/gmp-mingw32b
CONF:--enable-assert=full
CONF:CPPFLAGS=-DNPRINTF_J -DNPRINTF_L -DNPRINTF_T
ENV:LOG_COMPILER=wine
ENV:MPFR_CHECK_LIBC_PRINTF
INFO:CCV:--version
CHECK-END

HOST:tomate.lip.ens-lyon.fr
PROC:Quad-Core AMD Opteron 8378
CHECK-BEGIN < 40000
CONF:--with-gmp=$HOME/x86_64/gmp-debug
CONF:--enable-assert=full
CONF:--enable-thread-safe
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END
#CHECK-BEGIN
#CONF:--with-gmp=$HOME/x86_64/gmp-debug
#CONF:--enable-assert=full
#CONF:CC=opencc
#INFO:opencc --version 2>&1 | sed '/^$/Q'
#CHECK-END
#CHECK-BEGIN
#CONF:--with-gmp=$HOME/x86_64/gmp-debug
#CONF:--enable-assert=full
#CONF:CC=icc
#INFO:CCV:--version
#CHECK-END

HOST:xvii.vinc17.org
PROC:Intel Core2 Duo P8600
EVAL:export MPFR_CHECK_LOCALES=1
EVAL:unset CPATH C_INCLUDE_PATH LIBRARY_PATH LD_LIBRARY_PATH LD_RUN_PATH
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-4.3.1-debug
CONF:--enable-assert=full
CONF:--enable-thread-safe
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
# -DMPFR_TEST_DIVBYZERO should be removed in the future.
CONF:CFLAGS=-O2 -DMPFR_TESTS_FPE_DIV -DMPFR_TEST_DIVBYZERO -DMPFR_ERRDIVZERO -DXDEBUG -DMPFR_DISABLE_IEEE_FLOATS
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:CFLAGS=-O2 -D_MPFR_PREC_FORMAT=2
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp-build=$HOME/software/gmp-5.1.1
CONF:CC=gcc-snapshot
INFO:CCV:--version
CHECK-END

HOST:zira.vinc17.org
PROC:Intel Core i7-4810MQ
EVAL:export MPFR_CHECK_LOCALES=1
EVAL:unset CPATH C_INCLUDE_PATH LIBRARY_PATH LD_LIBRARY_PATH LD_RUN_PATH
EVAL:cflags1="-O2 -Wall -Wold-style-declaration -Wold-style-definition -Wmissing-parameter-type -Wmissing-prototypes -Wmissing-declarations -Wmissing-field-initializers -Wno-error=unused-function -Werror"
EVAL:cflags2="$cflags1 -Wcast-function-type -Wcast-align=strict"
# cflags2 can only be used with GCC 8 and later.
CHECK-BEGIN
INFO:CCV:--version
CHECK-END
CHECK-BEGIN >= 40000
# MPFR 4.0 is needed due to --enable-decimal-float without --with-gmp-build
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-logging
CONF:--enable-decimal-float
CONF:--enable-float128
CONF:CC=gcc-snapshot
CONF:CFLAGS=$cflags2 -DMPFR_COV_CHECK -DMPFR_GROUP_STATIC_SIZE=0
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
ENV:LC_ALL=tr_TR.iso88599
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-shared
CONF:--enable-thread-safe
CONF:CC=gcc-4.9
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
# For the decimal separator "," (instead of "."):
ENV:LC_ALL=fr_FR.utf8
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:CFLAGS=-Wall -std=c99 -O3 -D_XOPEN_SOURCE=500 -ftrapv -pedantic-errors -Wno-error=overlength-strings
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:CC=g++
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:CC=clang-3.6
CONF:CFLAGS=-O2 -fsanitize=undefined -fno-sanitize-recover
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:CC=clang-3.6
CONF:CFLAGS=-O2 -fsanitize=undefined -fno-sanitize=float-cast-overflow,float-divide-by-zero -fno-sanitize-recover -DMPFR_POOL_NENTRIES=0
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:CC=clang-3.9
CONF:CFLAGS=-O2 -D_MPFR_PREC_FORMAT=2
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:CC=clang-4.0
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-thread-safe
CONF:CC=gcc-5
CONF:CFLAGS=-O3 -march=native -DMPFR_COV_CHECK -DMPFR_ALLOCA_MAX=0
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--enable-assert=full
CONF:CC=tcc
CONF:LD=tcc
CONF:CFLAGS=-O2
INFO:CCV:-version
CHECK-END

HOST:gcc60.fsffrance.org
PROC:Itanium 2 Madison
CHECK-BEGIN
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

HOST:gcc66.fsffrance.org
PROC:Itanium 2 Madison
CHECK-BEGIN
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

HOST:ay.vinc17.org
PROC:PowerPC G4
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-debug
CONF:--enable-assert=full
CONF:--enable-thread-safe
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--enable-gmp-internals
INFO:CCV:--version
CHECK-END

HOST:gcc110.fsffrance.org
PROC:IBM POWER7
CHECK-BEGIN
CONF:--enable-assert=full
CONF:--enable-thread-safe
INFO:CCV:--version
CHECK-END

HOST:gcc112.fsffrance.org
PROC:IBM POWER8
CHECK-BEGIN
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

HOST:gcc42.fsffrance.org
PROC:MIPS Loongson 2F
CHECK-BEGIN
CONF:--with-gmp=$HOME/gmp-debug
CONF:--enable-assert=full
CONF:--enable-thread-safe
INFO:CCV:--version
CHECK-END

HOST:gcc49.fsffrance.org
PROC:MIPS Loongson 3A
CHECK-BEGIN
CONF:--enable-assert=full
CONF:--enable-thread-safe
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--enable-gmp-internals
INFO:CCV:--version
CHECK-END

HOST:gcc24.fsffrance.org
PROC:MIPS Cavium Octeon II V0.1
CHECK-BEGIN
CONF:--with-gmp=$HOME/n32
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=$HOME/n32
CONF:--enable-thread-safe
CONF:--enable-assert=full
CONF:CFLAGS=-O2 -mabi=n32 -DMPFR_COV_CHECK
INFO:CCV:--version
CHECK-END

HOST:gcc62.fsffrance.org
PROC:TI UltraSparc II BlackBird
CHECK-BEGIN
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--enable-gmp-internals
INFO:CCV:--version
CHECK-END

HOST:gcc202.fsffrance.org
PROC:UltraSparc T5 (Niagara5)
CHECK-BEGIN
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

HOST:n810.vinc17.org
PROC:OMAP 2420
CHECK-BEGIN
CONF:--enable-shared
CONF:--enable-thread-safe
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

HOST:gcc33.fsffrance.org
PROC:ARM Freescale i.MX515
CHECK-BEGIN
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

HOST:gcc55.fsffrance.org
PROC:ARM Feroceon 88FR131
CHECK-BEGIN
CONF:--enable-assert=full
CONF:--enable-thread-safe
INFO:CCV:--version
CHECK-END

HOST:ypig-arm.vinc17.org
PROC:ARM926EJ-S rev 5 [qemu]
CHECK-BEGIN < 40000
# GMP 4.3.2 from Debian/squeeze is too old for MPFR 4.
CONF:--enable-assert=full
CONF:--enable-thread-safe
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
# Note: GMP 6.1.2 has been built with the --enable-assert configure option.
CONF:--with-gmp=$HOME/opt/gmp-6.1.2
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

HOST:gcc115.fsffrance.org
PROC:AArch64 Processor rev 1
CHECK-BEGIN
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

HOST:gcc61.fsffrance.org
PROC:PA8600
CHECK-BEGIN
CONF:--enable-assert=full
CONF:--disable-thread-safe
CONF:CC=/opt/cfarm/release/4.4.1/bin/gcc
CONF:CFLAGS=-Wall -O2 -mpa-risc-1-1 -std=gnu99
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
ENV:LD_LIBRARY_PATH=$HOME/sw/gcc-189305/lib
CONF:--enable-assert=full
CONF:--enable-thread-safe
CONF:CC=$HOME/sw/gcc-189305/bin/gcc
CONF:CFLAGS=-Wall -O3 -mpa-risc-1-1 -std=gnu99
INFO:CCV:--version
CHECK-END

# Solaris
HOST:allo-psmn
PROC:x86
CHECK-BEGIN
CONF:--with-gmp=$HOME/i386-solaris
CONF:--disable-dependency-tracking
CONF:--enable-assert=full
INFO:CCV:-V
CHECK-END

# Solaris
HOST:unstable9x.opencsw.org
PROC:x86
CHECK-BEGIN
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

# Solaris
HOST:unstable10x.opencsw.org
PROC:x86
CHECK-BEGIN
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

# Solaris
HOST:unstable11x.opencsw.org
PROC:x86
CHECK-BEGIN
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

# Solaris
HOST:unstable9s.opencsw.org
PROC:Sparc
CHECK-BEGIN
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

# Solaris
HOST:unstable10s.opencsw.org
PROC:Sparc
CHECK-BEGIN
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

# Solaris
HOST:unstable11s.opencsw.org
PROC:Sparc
CHECK-BEGIN
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

# Mac OS X
HOST:prunille.vinc17.org
PROC:PowerPC G5
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-assert
CONF:--enable-assert=full
CONF:--enable-shared
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--enable-assert=full
CONF:CFLAGS=-m64 -ftrapv
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=/usr/local/gmp-5.0.1-mode32
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

# FreeBSD
HOST:gcc101.fsffrance.org
PROC:AMD Opteron 252
CHECK-BEGIN
CONF:--with-gmp=$HOME/gmp-debug
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

# FreeBSD
HOST:freebsd-83-amd64.gcc76.fsffrance.org
PROC:Intel Core i7-2600
CHECK-BEGIN
CONF:--with-gmp=/scratch/vinc17/freebsd-83-amd64
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

# FreeBSD
HOST:fbsd-cfarm.housegordon.com
PROC:Intel Xeon R5330
CHECK-BEGIN
CONF:--with-gmp=$HOME/gmp-debug
CONF:--enable-assert=full
INFO:CCV:--version
# For tarballs that do not have the following check-exported-symbols fix...
# A patch will not be published since end users do not normally use this.
EVAL:perl -pi -e 's/^\\s*\\K(grep.*)(?=`)/{ $1 || true ; }/' src/Makefile
CHECK-END

# NetBSD
HOST:gcc70.fsffrance.org
PROC:Intel Xeon 3.2E Irwindale
CHECK-BEGIN
CONF:--with-gmp=$HOME/gmp-debug
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

# NetBSD
HOST:nbsd-cfarm.housegordon.com
PROC:Intel Xeon R5330
CHECK-BEGIN <= 40001
# For MPFR up to 4.0.1, explicitly disable float128 support as it does not
# work (link failure) and this is not detected. Later MPFR versions will
# detect this failure (see MPFR trunk r12915 and 4.0 branch r12916).
CONF:--with-gmp=$HOME/gmp-debug
CONF:--enable-assert=full
CONF:--disable-float128
INFO:CCV:--version
CHECK-END
CHECK-BEGIN > 40001
CONF:--with-gmp=$HOME/gmp-debug
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

# OpenBSD
HOST:gcc64.fsffrance.org
PROC:Sun UltraSPARC-IIIi
CHECK-BEGIN
CONF:--with-gmp=$HOME/gmp-debug
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END
CHECK-BEGIN
CONF:--with-gmp=$HOME/gmp-debug
CONF:--enable-gmp-internals
INFO:CCV:--version
CHECK-END

# OpenBSD
HOST:obsd-cfarm.housegordon.com
PROC:Intel Xeon R5330
CHECK-BEGIN
CONF:--with-gmp=$HOME/gmp-debug
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

# AIX
HOST:gcc119.fsffrance.org
PROC:IBM POWER8
# Use gmake as parallel make with /usr/bin/make is broken.
EVAL:export MAKE=gmake
# For GMP built with the 64-bit ABI (see MPFR's INSTALL file)...
EVAL:export OBJECT_MODE=64
# On AIX 7.2, printf() with a large precision field is broken.
# https://twitter.com/IBMAIXeSupp/status/906163183727120384 "We've opened
# IV99725 to address this problem that is not specific to 7.2, but a long
# time bug that we need to look into and resolve".
EVAL:unset MPFR_CHECK_LIBC_PRINTF
CHECK-BEGIN
CONF:--with-gmp=/opt/cfarm/gmp-latest
CONF:--enable-assert=full
INFO:CCV:--version
CHECK-END

# $Id: mpfrtests.data 109974 2018-07-12 14:40:31Z vinc17/cventin $
