MPFR:
- release 3.0.1 (3.0.0 + patches) : Patrick release manager (avec l'aide de
	Vincent) -> release fevrier
  * ajouter info sur comment afficher les mpfr_t dans gdb par E. Thome
    dans doc/mpfr.texi (nouvelle section) [Patrick]
  * mpfr_subnormalize -> flags inexact/underflow a mettre [Vincent]
    
- 3.1.0 : prerelease fin mars [Vincent]
  * reste binary compatible avec 3.0.0
  * enable-thread-safe par defaut : on regarde pendant les coding sprints si
    on peut detecter facilement si les threads sont supportees
    [Vincent,Patrick,Laurent]
  * nouvelle macro MPFR_IS_ZERO(x) || MPFR_GET_EXP(x) <= value [Vincent]
  * TODO: verifier/mettre a jour mpfr_get_str, base <= 62 [Paul,Franck]
- passage mpfr_exp_t en int64_t :
  * on ne le fait pas pour 3.1.0 -> 4.0.0 ?
  * on pose la question sur la liste mpfr du passage en C99 [fait]
    -> Vincent repond a Brian
  * aussi sur liste gcc + newsgroups [Vincent]
  * ceux qui font des interfaces C++ [Mickael]

DONE coding sprints:
- Once the double inclusion of mpfr.h is fully supported, add tstdint
  to check_PROGRAMS in the tests/Makefile.am file. [Patrick,Vincent]
  Note: also added tvalist
- extended Lemma 2 in algorithms.tex [Laurent,Paul]
- test logging MPC (Eztrace ou pragmas GCC) [Andreas,Franck,Philippe,Mickael]
  -> partially done (for mpc_mul), remains to extend to other functions,
     and to integrate in configure
- Skipped tests with return 77 (Automake). [Patrick,Vincent]
- Enable TLS (thread safe) by default if supported [Vincent,Patrick]
- mpc_fma [Paul]
- [MPFR] ported to cdash for the tests using CTest
  -> ask an account on the Inria Dashboard

PARTLY DONE coding sprints:
- division par zero [Vincent,Patrick]
- random distribution functions [Laurent]
  mpfr_urandom_gaussian (rop1, rop2, randstate, rnd)
  polar Marsaglia transform
  remains doc + tests
- [MPC] autotools + logging [Andreas,Mickael] --enable-logging
  added configure option, works, problem with dlsym() which returns void*
  -> cast needed from void* into function pointer ?
- register_printf_function deprecated (logging.c) [Philippe,Patrick]

Coding sprints:
- register_printf_function deprecated (logging.c) [Philippe,Patrick]
- regarder les FIXME [Laurent,Paul]
- mpfr_inp_raw, mpfr_out_raw [Paul,Vincent,Mickael,Patrick]
- web page comparing timings of MPC and other systems [Andreas,Paul]

- document MPFR_USE_FILE and MPFR_USE_VA_LIST [Vincent,Patrick]
- efficacite de mpfr_root [Paul]
- probleme mpfr_rootrem [r7178,7180?] [Paul]
- inline mpfr_neg [Vincent,Patrick,Mickael]
- test coverage [Paul,Andreas,Vincent?]
- probleme mpfr_sub avec exposant de plage reduite [Paul]
- mpfr_set_q [Vincent]
- mpfr_frexp [Paul,Franck]
- eliminer appels a mpfr_set_emax dans MPC (sqr, pow, pow_ui) [Andreas,Paul]
- CEVAL [Paul,Andreas]
- AGM complexe
- correctly rounded roots of unity
- use of PIPOL for MPC [Philippe,Franck,Andreas]
- [MPC] algorithms.tex -> improve mpc_pow, add trig functions
- MAJ copyright fichiers MPFR pour 2011 [Vincent]

ADT:
- date limite 21 janvier, resultats en mars, embauche >= octobre 2011
- Participants : Lyon (coordinateur), Nancy, Bordeaux
- budget pour 1 "retraite" par an
2 gros objectifs :
(1) implanter arithmetique (centre,rayon) avec rayon en basse precision
  (midrad) alors que MPFI calcule les deux bornes (infsup).
  Rayon : nombre MPFR ou entier (representant l'erreur en ulps) comme iRRAM ?
  Si erreur plus grande qu'un mot machine -> reduire la precision du centre ?
  Regarder "Ball arithmetic" de Joris van der Hoeven (GMPX).
  Aussi utiliser l'arithmetique (centre,rayon) dans MPFR.
  Discussion avec les developpeurs de MPC a propos d'une arithmetique
  (centre,rayon) pour MPC (centre c complexe, rayon r reel) : |z-c| <= r
(2) mpfr_scanf (pour ingenieur de recherche)
- demande 1 IJD pour (1) [2 ans], 1 IR SED pour (2) [1 an?]
- reecriture mpfr_greater_p en code natif
- replace the *_THRESHOLD macros by global (TLS) variables that can be
  changed at run time (via a function, like other variables)? One benefit...
- improve coverage
- roundTiesToAway [IEEE 754-2008]
- arrondi fidele (ou centre/rayon) ?
- implement mpfr_z_sub, mpfr_q_sub, mpfr_z_div, mpfr_q_div
- [maybe useful for SAGE] implement companion frac_* functions to the rint_*
  functions. For example mpfr_frac_floor(x) = x - floor(x). (The current
  mpfr_frac function corresponds to mpfr_rint_trunc.)
-> Vincent redige un premier jet pour mercredi

ADT PARI-MP:
- Franck embauche sur 12 mois (avec Karim Belabas et Bill Allombert)
- Pari logiciel de theorie des nombres -> Franck s'occupe des couches basses
  (flottants, entiers)
- objectif : uniformiser les representations entiers/flottants pour avoir
  des fonctions plus uniforme
- actuellement 2 noyaux entiers : noyau natif (on garde) et noyau GMP
- flottants pas bases sur les entiers actuellement -> objectif est de les
  baser sur les entiers (noyau natif ou GMP) -> aucune specification sur
  l'erreur d'arrondi ?
- utilisation de la custom interface de MPFR prevue (month 22 to 24)

##############################################################################

MPC:
- package GNU:
  * faire une release 0.9 fin janvier [Andreas]
  * faire un depot APP de la 0.9 [Andreas]
  * demander a la FSF pour passer en GNU et le passage des droits a la FSF
    (voir avec autres developpeurs et leur employeur si ok: Mickael)
    negocier avec la FSF sur la mention de Magma et TRIP sur la page web
    [Andreas]
  * faire une release 1.0 en mai? [Andreas]
    4.6 -> stage 3, release mi-mai ?
  * mail sur mailing list pour prevenir de release 1.0 [Paul]
- article "grand public" sur MPC 1.0 [Andreas,Paul,Philippe,Mickael]
- publier algorithms.tex (ensuite)
